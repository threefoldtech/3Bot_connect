server {
    listen 80;
    server_name frontend;
    root   /var/www/html;
    index index.html;

    location /example {
        index  index.html;
        try_files $uri $uri/ /example/index.html;
    }

    location /api/ {
        proxy_set_header Host $host;
        proxy_pass http://localhost:5000/api/;
    }

    location /socket.io/ {
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://127.0.0.1:5000/socket.io/;
    }

    location / {
        root /var/www/html/frontend;
        try_files $uri $uri/ @rewrites;
    }

    location @rewrites {
        rewrite ^(.+)$ /index.html last;
    }

    location ~* \/example\/.*\.(?:ico|css|js|gif|jpe?g|png)$ {
        # Some basic cache-control for static files to be sent to the browser
        root /var/www/html/;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        # Some basic cache-control for static files to be sent to the browser
        root /var/www/html/frontend;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
}


# server {
#     listen 80;
#     server_name frontend;
#     access_log  off;

#     root /var/www/html/frontend;

#     index index.html;

#     location /api/ {
#         proxy_set_header Host $host;
#         proxy_pass http://localhost:5000/api/;
#     }

#     location /socket.io/ {
#         access_log off;
#         proxy_buffering off;

#         proxy_pass http://localhost:5000/socket.io/;

#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }

#     location / {
#         try_files $uri $uri/ @rewrites;
#     }

#     location @rewrites {
#         rewrite ^(.+)$ /index.html last;
#     }

#     location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
#         expires max;
#         add_header Pragma public;
#         add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#     }
# }

# # server {
# #     listen 80;
# #     server_name example;
# #     root /var/www/html/example;
# #     access_log  off;
    
# #     index index.html;

# #     location / {
# #         try_files $uri $uri/ @rewrites;
# #     }

# #     location @rewrites {
# #         rewrite ^(.+)$ /index.html last;
# #     }

# #     location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
# #         # Some basic cache-control for static files to be sent to the browser
# #         expires max;
# #         add_header Pragma public;
# #         add_header Cache-Control "public, must-revalidate, proxy-revalidate";
# #     }
# # }
